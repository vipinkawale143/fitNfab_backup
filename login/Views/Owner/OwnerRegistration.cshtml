@model login.Models.Owner

@{
    ViewBag.Title = "SignUp";

}

<h2>SignUp</h2>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBox("Validatetextbox", null, new { @class = "form-control", @id = "Validatetextbox" })*@
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group ">

            <div class="col-md-10 hidden ">
                <label>Latitude</label>
                <input id="Latitude" name="Latitude" class="form-control" type="text" />
            </div>

        </div>

        <div class="form-group  ">

            <div class="col-md-10 hidden ">
                <label>Longitude</label>
                <input id="Longitude" name="Longitude" class="form-control" type="text" />
            </div>

        </div>

        <script>


            window.onload = function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition);
                } else {
                    alert("pls turn on location");
                }
            }

            function showPosition(position) {
                document.getElementById("Latitude").value = position.coords.latitude;
                document.getElementById("Longitude").value = position.coords.longitude;


            }
        </script>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn  bg-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Login", "Login", "LoginId")
</div>

@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script type="text/javascript">

    $('#Validatetextbox').mouseleave(function () {
            debugger;
            var o = {};
        o.Email = $("#Validatetextbox").val();
        $.ajax({
    
                type: "POST",
                url: '@Url.Action("ValidateEmail")',
                data: '{o: ' + JSON.stringify(o) + '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data != "")
                        alert("Already exist");
             
                },
                error: function (xhr) {
                    alert("EmailId is already register");
                }
            });
            return false;
        });
</script>*@